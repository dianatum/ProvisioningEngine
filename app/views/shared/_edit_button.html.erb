<%
  # if we happen to reach here, although the file is included already, we return right away...
  return if defined? edit_button_included

  def edit_button_included
    true
  end

  render 'shared/helpers.html.erb' unless defined? helpers_included

  def edit_button

    # define the link
    def myLink(linkLabel = 'Edit')
      case linkLabel
        when 'Edit'
          link_to linkLabel, provisioningobject_path(@provisioningobject, 'edit'), class: "btn btn-primary"
        when 'Waiting'
          raw('<button class= "btn btn-default" onclick="alert(\'De-Provision the item first!\');">Edit</button>')
        else
          raise "myLink called with wrong linkLabel=#{linkLabel}"
      end
    end

    # return the link
    if @provisioningobject.provisioned? || /waiting/.match(@provisioningobject.status) || /progress/.match(@provisioningobject.status)
      return myLink('Waiting') unless SystemSetting.webportal_provisioningobjects_hide_inactivebuttons
    else
      return myLink('Edit')
    end

  end # def edit_button
%>
